// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static Etain.Controllers.HomeController Home = new Etain.Controllers.T4MVC_HomeController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

#pragma warning disable 0436
namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}
#pragma warning restore 0436

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class JS {
            public const string UrlPath = "~/Content/JS";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Require {
                public const string UrlPath = "~/Content/JS/Require";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string requireconfig_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/requireconfig.min.js") ? Url("requireconfig.min.js") : Url("requireconfig.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class SCSS {
            public const string UrlPath = "~/Content/SCSS";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Internal {
                public const string UrlPath = "~/Content/SCSS/Internal";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class BaseStructure {
                    public const string UrlPath = "~/Content/SCSS/Internal/BaseStructure";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string footer_content_scss = Url("footer-content.scss");
                    public static readonly string main_content_scss = Url("main-content.scss");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Custom {
                    public const string UrlPath = "~/Content/SCSS/Internal/Custom";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string weather_scss = Url("weather.scss");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class General {
                    public const string UrlPath = "~/Content/SCSS/Internal/General";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string html_scss = Url("html.scss");
                    public static readonly string margins_scss = Url("margins.scss");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Variables {
                    public const string UrlPath = "~/Content/SCSS/Internal/Variables";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string colours_scss = Url("colours.scss");
                }
            
            }
        
            public static readonly string main_min_css = Url("main.min.css");
            public static readonly string main_scss = Url("main.scss");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Overrides {
                public const string UrlPath = "~/Content/SCSS/Overrides";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Bootstrap {
                    public const string UrlPath = "~/Content/SCSS/Overrides/Bootstrap";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string alerts_scss = Url("alerts.scss");
                    public static readonly string colours_scss = Url("colours.scss");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class SelectTwo {
                    public const string UrlPath = "~/Content/SCSS/Overrides/SelectTwo";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string select_two_overrides_scss = Url("select-two-overrides.scss");
                }
            
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class TS {
            public const string UrlPath = "~/Content/TS";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Account {
                public const string UrlPath = "~/Content/TS/Account";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string account_base_html = Url("account-base.html");
                public static readonly string account_base_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/account-base.min.js") ? Url("account-base.min.js") : Url("account-base.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Enums {
                    public const string UrlPath = "~/Content/TS/Account/Enums";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string WorkflowSteps_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/WorkflowSteps.min.js") ? Url("WorkflowSteps.min.js") : Url("WorkflowSteps.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Login {
                    public const string UrlPath = "~/Content/TS/Account/Login";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string account_login_html = Url("account-login.html");
                    public static readonly string account_login_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/account-login.min.js") ? Url("account-login.min.js") : Url("account-login.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Register {
                    public const string UrlPath = "~/Content/TS/Account/Register";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string account_register_html = Url("account-register.html");
                    public static readonly string account_register_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/account-register.min.js") ? Url("account-register.min.js") : Url("account-register.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Services {
                    public const string UrlPath = "~/Content/TS/Account/Services";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string AccountService_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/AccountService.min.js") ? Url("AccountService.min.js") : Url("AccountService.js");
                    public static readonly string AccountSignalConfiguration_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/AccountSignalConfiguration.min.js") ? Url("AccountSignalConfiguration.min.js") : Url("AccountSignalConfiguration.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Enums {
                public const string UrlPath = "~/Content/TS/Enums";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Shared {
                    public const string UrlPath = "~/Content/TS/Enums/Shared";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class Ajax {
                        public const string UrlPath = "~/Content/TS/Enums/Shared/Ajax";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string XhrStatusCodes_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/XhrStatusCodes.min.js") ? Url("XhrStatusCodes.min.js") : Url("XhrStatusCodes.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Weather {
                    public const string UrlPath = "~/Content/TS/Enums/Weather";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string WeatherTypes_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/WeatherTypes.min.js") ? Url("WeatherTypes.min.js") : Url("WeatherTypes.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Models {
                public const string UrlPath = "~/Content/TS/Models";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Account {
                    public const string UrlPath = "~/Content/TS/Models/Account";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string LoginDetails_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/LoginDetails.min.js") ? Url("LoginDetails.min.js") : Url("LoginDetails.js");
                    public static readonly string RegistrationDetails_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/RegistrationDetails.min.js") ? Url("RegistrationDetails.min.js") : Url("RegistrationDetails.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class FontAwesome {
                    public const string UrlPath = "~/Content/TS/Models/FontAwesome";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string FontAwesomeConfiguration_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/FontAwesomeConfiguration.min.js") ? Url("FontAwesomeConfiguration.min.js") : Url("FontAwesomeConfiguration.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class SelectTwo {
                    public const string UrlPath = "~/Content/TS/Models/SelectTwo";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string SelectTwoBindingModels_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/SelectTwoBindingModels.min.js") ? Url("SelectTwoBindingModels.min.js") : Url("SelectTwoBindingModels.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Weather {
                    public const string UrlPath = "~/Content/TS/Models/Weather";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string WeatherDetails_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/WeatherDetails.min.js") ? Url("WeatherDetails.min.js") : Url("WeatherDetails.js");
                    public static readonly string WeatherDetailsFormProperties_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/WeatherDetailsFormProperties.min.js") ? Url("WeatherDetailsFormProperties.min.js") : Url("WeatherDetailsFormProperties.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Shared {
                public const string UrlPath = "~/Content/TS/Shared";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Bootstrap {
                    public const string UrlPath = "~/Content/TS/Shared/Bootstrap";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class Alerts {
                        public const string UrlPath = "~/Content/TS/Shared/Bootstrap/Alerts";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string alert_base_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/alert-base.min.js") ? Url("alert-base.min.js") : Url("alert-base.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class Danger {
                            public const string UrlPath = "~/Content/TS/Shared/Bootstrap/Alerts/Danger";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                            public static readonly string alert_danger_html = Url("alert-danger.html");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class GenericError {
                            public const string UrlPath = "~/Content/TS/Shared/Bootstrap/Alerts/GenericError";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                            public static readonly string generic_error_html = Url("generic-error.html");
                            public static readonly string generic_error_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/generic-error.min.js") ? Url("generic-error.min.js") : Url("generic-error.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class Primary {
                            public const string UrlPath = "~/Content/TS/Shared/Bootstrap/Alerts/Primary";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                            public static readonly string alert_primary_html = Url("alert-primary.html");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class Buttons {
                        public const string UrlPath = "~/Content/TS/Shared/Bootstrap/Buttons";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class Standard {
                            public const string UrlPath = "~/Content/TS/Shared/Bootstrap/Buttons/Standard";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class Danger {
                                public const string UrlPath = "~/Content/TS/Shared/Bootstrap/Buttons/Standard/Danger";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                                public static readonly string button_danger_outline_html = Url("button-danger-outline.html");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class Dark {
                                public const string UrlPath = "~/Content/TS/Shared/Bootstrap/Buttons/Standard/Dark";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                                public static readonly string button_dark_outline_html = Url("button-dark-outline.html");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class Primary {
                                public const string UrlPath = "~/Content/TS/Shared/Bootstrap/Buttons/Standard/Primary";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                                public static readonly string button_primary_outline_html = Url("button-primary-outline.html");
                                public static readonly string button_primary_html = Url("button-primary.html");
                            }
                        
                            public static readonly string standard_buttons_base_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/standard-buttons-base.min.js") ? Url("standard-buttons-base.min.js") : Url("standard-buttons-base.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class Submit {
                            public const string UrlPath = "~/Content/TS/Shared/Bootstrap/Buttons/Submit";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                            public static readonly string submit_action_html = Url("submit-action.html");
                            public static readonly string submit_action_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/submit-action.min.js") ? Url("submit-action.min.js") : Url("submit-action.js");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Controls {
                    public const string UrlPath = "~/Content/TS/Shared/Controls";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class Inputs {
                        public const string UrlPath = "~/Content/TS/Shared/Controls/Inputs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class Email {
                            public const string UrlPath = "~/Content/TS/Shared/Controls/Inputs/Email";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                            public static readonly string input_email_html = Url("input-email.html");
                            public static readonly string input_email_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/input-email.min.js") ? Url("input-email.min.js") : Url("input-email.js");
                        }
                    
                        public static readonly string inputs_base_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/inputs-base.min.js") ? Url("inputs-base.min.js") : Url("inputs-base.js");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class Password {
                            public const string UrlPath = "~/Content/TS/Shared/Controls/Inputs/Password";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                            public static readonly string input_password_html = Url("input-password.html");
                            public static readonly string input_password_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/input-password.min.js") ? Url("input-password.min.js") : Url("input-password.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class Text {
                            public const string UrlPath = "~/Content/TS/Shared/Controls/Inputs/Text";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                            public static readonly string input_text_html = Url("input-text.html");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class SelectTwo {
                        public const string UrlPath = "~/Content/TS/Shared/Controls/SelectTwo";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string select_two_base_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select-two-base.min.js") ? Url("select-two-base.min.js") : Url("select-two-base.js");
                        public static readonly string select_two_single_html = Url("select-two-single.html");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class CustomBindings {
                    public const string UrlPath = "~/Content/TS/Shared/CustomBindings";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class Accessibility {
                        public const string UrlPath = "~/Content/TS/Shared/CustomBindings/Accessibility";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string AccessibilityBindings_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/AccessibilityBindings.min.js") ? Url("AccessibilityBindings.min.js") : Url("AccessibilityBindings.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class Bootstrap {
                        public const string UrlPath = "~/Content/TS/Shared/CustomBindings/Bootstrap";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string ModalBindings_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ModalBindings.min.js") ? Url("ModalBindings.min.js") : Url("ModalBindings.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class Controls {
                        public const string UrlPath = "~/Content/TS/Shared/CustomBindings/Controls";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string PasswordBindings_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/PasswordBindings.min.js") ? Url("PasswordBindings.min.js") : Url("PasswordBindings.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class FontAwesome {
                        public const string UrlPath = "~/Content/TS/Shared/CustomBindings/FontAwesome";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string FontAwesomeBindings_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/FontAwesomeBindings.min.js") ? Url("FontAwesomeBindings.min.js") : Url("FontAwesomeBindings.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class SelectTwo {
                        public const string UrlPath = "~/Content/TS/Shared/CustomBindings/SelectTwo";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string SelectTwoBindings_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/SelectTwoBindings.min.js") ? Url("SelectTwoBindings.min.js") : Url("SelectTwoBindings.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Header {
                    public const string UrlPath = "~/Content/TS/Shared/Header";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string header_content_html = Url("header-content.html");
                    public static readonly string header_content_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/header-content.min.js") ? Url("header-content.min.js") : Url("header-content.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class Services {
                        public const string UrlPath = "~/Content/TS/Shared/Header/Services";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                        public static readonly string CreateSetup_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/CreateSetup.min.js") ? Url("CreateSetup.min.js") : Url("CreateSetup.js");
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Weather {
                public const string UrlPath = "~/Content/TS/Weather";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Form {
                    public const string UrlPath = "~/Content/TS/Weather/Form";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string weather_search_form_html = Url("weather-search-form.html");
                    public static readonly string weather_search_form_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/weather-search-form.min.js") ? Url("weather-search-form.min.js") : Url("weather-search-form.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Results {
                    public const string UrlPath = "~/Content/TS/Weather/Results";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string weather_search_results_html = Url("weather-search-results.html");
                    public static readonly string weather_search_results_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/weather-search-results.min.js") ? Url("weather-search-results.min.js") : Url("weather-search-results.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Services {
                    public const string UrlPath = "~/Content/TS/Weather/Services";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string ConfigureSearchFormService_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ConfigureSearchFormService.min.js") ? Url("ConfigureSearchFormService.min.js") : Url("ConfigureSearchFormService.js");
                    public static readonly string CreateSetup_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/CreateSetup.min.js") ? Url("CreateSetup.min.js") : Url("CreateSetup.js");
                    public static readonly string WeatherDetailsService_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/WeatherDetailsService.min.js") ? Url("WeatherDetailsService.min.js") : Url("WeatherDetailsService.js");
                }
            
                public static readonly string weather_base_html = Url("weather-base.html");
                public static readonly string weather_base_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/weather-base.min.js") ? Url("weather-base.min.js") : Url("weather-base.js");
            }
        
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Content 
        {
            public static partial class JS 
            {
                public static partial class Require 
                {
                    public static class Assets
                    {
                        public static readonly string requireconfig_js = T4MVCHelpers.ProcessAssetPath("~/Content/JS/Require/requireconfig.js"); 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class SCSS 
            {
                public static partial class Internal 
                {
                    public static partial class BaseStructure 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class Custom 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class General 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class Variables 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class Overrides 
                {
                    public static partial class Bootstrap 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class SelectTwo 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public static readonly string main_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/SCSS/main.min.css");
                }
            }
            public static partial class TS 
            {
                public static partial class Account 
                {
                    public static partial class Enums 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class Login 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class Register 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class Services 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class Enums 
                {
                    public static partial class Shared 
                    {
                        public static partial class Ajax 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class Weather 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class Models 
                {
                    public static partial class Account 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class FontAwesome 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class SelectTwo 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class Weather 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class Shared 
                {
                    public static partial class Bootstrap 
                    {
                        public static partial class Alerts 
                        {
                            public static partial class Danger 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static partial class GenericError 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static partial class Primary 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class Buttons 
                        {
                            public static partial class Standard 
                            {
                                public static partial class Danger 
                                {
                                    public static class Assets
                                    {
                                    }
                                }
                                public static partial class Dark 
                                {
                                    public static class Assets
                                    {
                                    }
                                }
                                public static partial class Primary 
                                {
                                    public static class Assets
                                    {
                                    }
                                }
                                public static class Assets
                                {
                                }
                            }
                            public static partial class Submit 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class Controls 
                    {
                        public static partial class Inputs 
                        {
                            public static partial class Email 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static partial class Password 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static partial class Text 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class SelectTwo 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class CustomBindings 
                    {
                        public static partial class Accessibility 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class Bootstrap 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class Controls 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class FontAwesome 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static partial class SelectTwo 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class Header 
                    {
                        public static partial class Services 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class Weather 
                {
                    public static partial class Form 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class Results 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class Services 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    private static string ProcessAssetPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and should retain this prefix
        return virtualPath;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;
    public static Func<string, string> ProcessAssetPath = ProcessAssetPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


